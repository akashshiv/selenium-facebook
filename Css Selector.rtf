{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh17520\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Css Selector\
\
Table which we used\
	Class ->  .\
	Id 		 ->  #\
	Contains -> *\
 	Start-with -> ^\
	Emd-with -> $\
\
1. Css is faster then xpath because xpath created based on Dom elements or html web element so it find element in Dom. But css 	doesn\'92t matter on Dom so it directly apply so that\'92s why css selector is faster then path.\
\
2. With Css selector is directly hit class ,id etc so you don\'92t need to mention //. It \'92s for html Dom element not for css. Css works directly 	with css so you don\'92t need to put these //. Same with @.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 1. element[attribute=\'93value\'94]\
	   div[class=\'93Container\'94] -> It find exact match like if container class is there then it will find otherwise give null.\
\
2. element[attribute*=\'93value\'94] (contains)\
	  div[class*=\'93Container\'94]-> It find the partial match like if any class is abccontainer so it will give that class in result.\
\
3. element[attribute^=\'93value\'94] (Start-with)\
		div[class^=\'93Container\'94]->  It find the partial match but only start value not like contains, contains work on any partial value.\
\
4. element[attribute$=\'93value\'94] (End-with)\
		div[class$=\'93Container\'94] -> It find the partial match but only end value not like contains, contains work on any partial value.\
\
5. element.ClassName\
        div.Container -> User can class for css selector directly.\
\
6. element#IdName\
		div#Container -> User can Id for css selector directly.\
\
}